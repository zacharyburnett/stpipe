name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  schedule:
    # Weekly Monday 9AM build
    # * is a special character in YAML so you have to quote this string
    - cron: '0 9 * * 1'

jobs:
  security_audit:
    name: audit security vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: security-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install bandit
      - run: bandit -r -ll src
  style:
    name: check code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: style-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install flake8
      - run: flake8 --count
  test:
    needs: [ security_audit, style ]
    name: test
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ 'ubuntu-latest', 'macos-latest' ]
        python-version: [ '3.8', '3.9', '3.10', '3.x']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install ".[test]" pytest-xdist
      - run: pytest -n auto
  test_with_coverage:
    needs: [ security_audit, style ]
    name: test with coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-coverage-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install ".[test]" pytest-xdist
      - run: pytest --cov-report=xml --cov=src/stpipe --cov-config=setup.cfg
      - run: coverage report
      - uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
  test_jwst_coverage:
    needs: [ security_audit, style ]
    name: test JWST pipeline with coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-jwst-coverage-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install ".[test]" "jwst[test]@git+https://github.com/spacetelescope/jwst" pytest-xdist
      - run: pytest -n auto --cov-report=xml --cov=./src/stpipe --ignore-glob=timeconversion --ignore-glob=associations --pyargs jwst
      - run: coverage report
      - uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
  test_roman_coverage:
    needs: [ security_audit, style ]
    name: test Roman pipeline with coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: test-roman-coverage-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.*') }}
      - run: pip install ".[test]" "romancal[test]@git+https://github.com/spacetelescope/romancal" pytest-xdist
      - run: pytest --cov-report=xml --cov=./src/stpipe --pyargs romancal
      - run: coverage report
      - uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
